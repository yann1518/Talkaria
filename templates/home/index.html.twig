{% extends 'permanent.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block content %}
<section class="blog home-background" style="background: var(--primary-light); min-height: 100vh;">
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-8" style="padding-right: 50px;">
                <div class="blog-section-title" style="margin-bottom:2em;">
                    <h2 style="color: var(--primary-dark); font-weight: 700;">POSTS</h2>
                    <div style="text-align:center; margin-bottom:1em;">
  <a class="btn btn-create-outline" href="{{ path('app_post_create_or_edit') }}">Créer un post</a>
</div>
                    <p style="font-size:1.1em; color:#555;">Tous les posts récents sur Talkaria</p>
                    <div class="category-filter" style="margin-bottom:1.5em;">
                        <label for="categorySelect" style="margin-right:0.8em;">Filtrer par catégorie :</label>
                        <select id="categorySelect" onchange="filterByCategory()" style="min-width:160px;">
    <option value="" {% if not selectedCategory %}selected{% endif %}>Toutes les catégories</option>
    {% for category in categories %}
        <option value="{{ category }}" {% if category == selectedCategory %}selected{% endif %}>{{ category }}</option>
    {% endfor %}
</select>
                    </div>
                </div>
                <div class="blog-posts" id="blogPosts">
                    {% for post in posts %}
                        <div class="post">
                            {% include 'adds/modele_post.html.twig' with {'post': post} %}
                        </div>
                    {% else %}
                        <p>Aucun article trouvé.</p>
                    {% endfor %}
                </div>
                <div class="blog-post-pagination">
                    <nav aria-label="Page navigation example" class="nav-bg">
                        <ul class="pagination">
                            {% if current_page > 1 %}
                                <li class="page-item">
                                    <a class="page-link" href="{{ path('app_home', {'page': current_page - 1}) }}">Précédent</a>
                                </li>
                            {% endif %}
                            <li class="page-item active"><a class="page-link" href="#">{{ current_page }}</a></li>
                            {% if current_page < total_pages %}
                                <li class="page-item">
                                    <a class="page-link" href="{{ path('app_home', {'page': current_page + 1}) }}">Suivant</a>
                                </li>
                            {% endif %}
                        </ul>
                    </nav>
                </div>
            </div>

        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
// Fonction de filtre catégorie (doit être définie avant le select)
function filterByCategory() {
    var selectedCategory = document.getElementById("categorySelect").value;
    var url = new URL(window.location.href);
    url.pathname = '/home'; // <-- force la redirection sur /home
    // Met à jour le paramètre de la catégorie dans l'URL
    if (selectedCategory) {
        url.searchParams.set('category', selectedCategory);
    } else {
        url.searchParams.delete('category');
    }
    url.searchParams.set('page', 1); // reset pagination
    window.location.href = url.toString();
}

console.log('likePost chargé');
function likePost(postId) {
    console.log('clicked', postId);
    const heart = document.getElementById('heart-icon-' + postId);
    const likeCount = document.getElementById('likes-count-' + postId);
    // Animation immédiate pour un retour visuel rapide
    heart.classList.add('heart-animation');
    $.ajax({
        url: '/post/' + postId + '/like',
        type: 'POST',
        headers: {
            'X-Requested-With': 'XMLHttpRequest',
        },
        success: function (response) {
            heart.classList.remove('heart-animation');
            if (response.success === false) {
                console.error('Erreur:', response.error);
                return;
            }
            likeCount.textContent = response.likes;
            if (response.isLiked) {
                heart.classList.add('liked');
                heart.querySelector('path').setAttribute('fill', '#e25555');
                heart.querySelector('path').setAttribute('stroke', '#e25555');
            } else {
                heart.classList.remove('liked');
                heart.querySelector('path').setAttribute('fill', '#fff');
                heart.querySelector('path').setAttribute('stroke', 'var(--primary-dark)');
            }
        },
        error: function (xhr) {
            heart.classList.remove('heart-animation');
            try {
                const errorResponse = JSON.parse(xhr.responseText);
                console.error('Erreur:', errorResponse.error || 'Erreur inconnue');
                if (xhr.status === 403) {
                    window.location.href = '/login';
                }
            } catch (e) {
                console.error('Erreur lors du traitement de la réponse du serveur');
            }
        }
    });
}
</script>

<script>
    function filterByCategory() {
        var selectedCategory = document.getElementById("categorySelect").value;
        var url = new URL(window.location.href);
        url.pathname = '/home'; // <-- force la redirection sur /home
        // Met à jour le paramètre de la catégorie dans l'URL
        if (selectedCategory) {
            url.searchParams.set('category', selectedCategory);
        } else {
            url.searchParams.delete('category');
        }
        url.searchParams.set('page', 1); // reset pagination
        window.location.href = url.toString();
    }
                } catch (e) {
                    console.error('Erreur lors du traitement de la réponse du serveur');
                }
            }
    }
</script>

{% endblock %}
